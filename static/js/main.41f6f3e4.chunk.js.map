{"version":3,"sources":["Tweet.js","App.js","reportWebVitals.js","index.js"],"names":["Tweet","name","message","className","App","useState","isRed","setRed","count","setCount","users","onClick","map","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAaeA,MAVf,YAA+B,IAAfC,EAAc,EAAdA,KAAKC,EAAS,EAATA,QACjB,OACI,sBAAKC,UAAU,QAAf,UACI,6BAAKF,IACL,4BAAIC,IACJ,qDC+BGE,MAnCf,WAAe,IAAD,EAEYC,oBAAS,GAFrB,mBAELC,EAFK,KAEEC,EAFF,OAGcF,mBAAS,GAHvB,mBAGLG,EAHK,KAGEC,EAHF,OAUcJ,mBAAS,CACjC,CAAEJ,KAAM,QAASC,QAAS,yBAC1B,CAAED,KAAM,QAASC,QAAS,eAC1B,CAAED,KAAM,QAASC,QAAS,8BAbhB,mBAULQ,EAVK,KAgBZ,OAhBY,KAkBV,sBAAKP,UAAU,MAAf,UACE,gCACE,oBAAIA,UAAWG,EAAQ,MAAQ,GAA/B,6BACA,wBAAQK,QAhBI,WAChBF,EAASD,EAAQ,GACjBD,GAAQD,IAcJ,uBACA,6BAAKE,OAIP,6CACA,cAAC,EAAD,CAAOP,KAAK,SAASC,QAAQ,2BAC5BQ,EAAME,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAOZ,KAAMY,EAAKZ,KAAMC,QAASW,EAAKX,iBCrB/BY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41f6f3e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./App.css\";\r\n\r\nfunction Tweet({name,message}){\r\n    return(\r\n        <div className=\"tweet\">\r\n            <h3>{name}</h3>\r\n            <p>{message}</p>\r\n            <h3>Number of likes</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;","import React, {useState} from 'react';\nimport Tweet from \"./Tweet\";\n\n\nfunction App(){\n\n  const [isRed, setRed] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n    setRed(!isRed);\n  };\n\n  const [users, setUsers] = useState([\n    { name: \"React\", message: \"Hello World of React!\" },\n    { name: \"Mabel\", message: \"This works!\" },\n    { name: \"Trump\", message: \"I am banned from Twitter\" }\n  ])\n  \n  return(\n    \n    <div className=\"App\">\n      <div> \n        <h1 className={isRed ? 'red' : \"\"}>Change my color</h1>\n        <button onClick={increment}>Increment</button>\n        <h1>{count}</h1>\n      </div>\n      \n\n      <h1>Hello React</h1>\n      <Tweet name=\"Dev ED\" message=\"This is a random tweet\"/>\n      {users.map(user => (\n        <Tweet name={user.name} message={user.message} />\n        ))}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}